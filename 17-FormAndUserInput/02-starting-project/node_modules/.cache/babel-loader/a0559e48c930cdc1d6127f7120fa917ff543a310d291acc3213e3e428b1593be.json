{"ast":null,"code":"var _jsxFileName = \"/Users/sahilverma/React/17-FormAndUserInput/02-starting-project/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    enteredField: enteredName,\n    enteredFieldIsValid: enteredNameIsValid,\n    enterdNameisInvalid: enterdNameIsInvalid,\n    fieldChangeHandler: nameChangeHandler,\n    fieldBlurHandler: nameBlurHandler,\n    reset\n  } = useInput(value => value.trim !== \"\");\n\n  //   const [enteredName, setEnteredName] = useState(\"\");\n  //   const [inputFieldIsTouched, setInputFieldIsTouched] = useState(false);\n\n  //   const EnterdNameIsValid = enteredName.trim() !== \"\";\n  //   const InputIsInvalid = !EnterdNameIsValid && inputFieldIsTouched;\n\n  let formIsValid = false;\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  //   const inputChangeHandler = (event) => {\n  //     setEnteredName(event.target.value);\n  //   };\n\n  //   const inputBlurHandler = () => {\n  //     setInputFieldIsTouched(true);\n  //   };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    // setInputFieldIsTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n    // console.log(enteredName);\n    setEnteredName(\"\");\n    setInputFieldIsTouched(false);\n  };\n  const inputClass = InputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputChangeHandler,\n        value: enteredName,\n        onBlur: inputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), InputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"EnteredName is not Valid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"yWryT9NXjIGdNtIt5GxbeBoj+T8=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredField","enteredName","enteredFieldIsValid","enteredNameIsValid","enterdNameisInvalid","enterdNameIsInvalid","fieldChangeHandler","nameChangeHandler","fieldBlurHandler","nameBlurHandler","reset","value","trim","formIsValid","submitHandler","event","preventDefault","setEnteredName","setInputFieldIsTouched","inputClass","InputIsInvalid","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","inputChangeHandler","onBlur","inputBlurHandler","disabled","_c","$RefreshReg$"],"sources":["/Users/sahilverma/React/17-FormAndUserInput/02-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    enteredField: enteredName,\n    enteredFieldIsValid: enteredNameIsValid,\n    enterdNameisInvalid: enterdNameIsInvalid,\n    fieldChangeHandler: nameChangeHandler,\n    fieldBlurHandler: nameBlurHandler,\n    reset,\n  } = useInput((value) => value.trim !== \"\");\n\n  //   const [enteredName, setEnteredName] = useState(\"\");\n  //   const [inputFieldIsTouched, setInputFieldIsTouched] = useState(false);\n\n  //   const EnterdNameIsValid = enteredName.trim() !== \"\";\n  //   const InputIsInvalid = !EnterdNameIsValid && inputFieldIsTouched;\n\n  let formIsValid = false;\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  //   const inputChangeHandler = (event) => {\n  //     setEnteredName(event.target.value);\n  //   };\n\n  //   const inputBlurHandler = () => {\n  //     setInputFieldIsTouched(true);\n  //   };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    // setInputFieldIsTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n    // console.log(enteredName);\n    setEnteredName(\"\");\n    setInputFieldIsTouched(false);\n  };\n\n  const inputClass = InputIsInvalid ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={inputClass}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={inputChangeHandler}\n          value={enteredName}\n          onBlur={inputBlurHandler}\n        />\n      </div>\n      {InputIsInvalid && <p className=\"error-text\">EnteredName is not Valid</p>}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM;IACJC,YAAY,EAAEC,WAAW;IACzBC,mBAAmB,EAAEC,kBAAkB;IACvCC,mBAAmB,EAAEC,mBAAmB;IACxCC,kBAAkB,EAAEC,iBAAiB;IACrCC,gBAAgB,EAAEC,eAAe;IACjCC;EACF,CAAC,GAAGhB,QAAQ,CAAEiB,KAAK,IAAKA,KAAK,CAACC,IAAI,KAAK,EAAE,CAAC;;EAE1C;EACA;;EAEA;EACA;;EAEA,IAAIC,WAAW,GAAG,KAAK;EACvB,IAAIV,kBAAkB,EAAE;IACtBU,WAAW,GAAG,IAAI;EACpB;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;;IAEA,IAAI,CAACb,kBAAkB,EAAE;MACvB;IACF;IACA;IACAc,cAAc,CAAC,EAAE,CAAC;IAClBC,sBAAsB,CAAC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,UAAU,GAAGC,cAAc,GAAG,sBAAsB,GAAG,cAAc;EAE3E,oBACExB,OAAA;IAAMyB,QAAQ,EAAEP,aAAc;IAAAQ,QAAA,gBAC5B1B,OAAA;MAAK2B,SAAS,EAAEJ,UAAW;MAAAG,QAAA,gBACzB1B,OAAA;QAAO4B,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvChC,OAAA;QACEiC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,QAAQ,EAAEC,kBAAmB;QAC7BrB,KAAK,EAAEV,WAAY;QACnBgC,MAAM,EAAEC;MAAiB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLR,cAAc,iBAAIxB,OAAA;MAAG2B,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAwB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACzEhC,OAAA;MAAK2B,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3B1B,OAAA;QAAQuC,QAAQ,EAAE,CAACtB,WAAY;QAAAS,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAC7B,EAAA,CA7DIF,WAAW;EAAA,QAQXH,QAAQ;AAAA;AAAA0C,EAAA,GARRvC,WAAW;AA+DjB,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}