{"ast":null,"code":"var _jsxFileName = \"/Users/sahilverma/React/17-FormAndUserInput/02-starting-project/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {} = useInput(value => value.trim !== \"\");\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [inputFieldIsTouched, setInputFieldIsTouched] = useState(false);\n  const EnterdNameisValid = enteredName.trim() !== \"\";\n  const InputIsInvalid = !EnterdNameisValid && inputFieldIsTouched;\n  let formIsValid = false;\n  if (EnterdNameisValid) {\n    formIsValid = true;\n  }\n  const inputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const inputBlurHandler = () => {\n    setInputFieldIsTouched(true);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    setInputFieldIsTouched(true);\n    if (!EnterdNameisValid) {\n      return;\n    }\n    console.log(enteredName);\n    setEnteredName(\"\");\n    setInputFieldIsTouched(false);\n  };\n  const inputClass = InputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputChangeHandler,\n        value: enteredName,\n        onBlur: inputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), InputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"EnteredName is not Valid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"ZY79cz2WGeQHXq61lNdtOhCxiX4=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","trim","enteredName","setEnteredName","inputFieldIsTouched","setInputFieldIsTouched","EnterdNameisValid","InputIsInvalid","formIsValid","inputChangeHandler","event","target","inputBlurHandler","submitHandler","preventDefault","console","log","inputClass","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/sahilverma/React/17-FormAndUserInput/02-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {} = useInput((value) => value.trim !== \"\");\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [inputFieldIsTouched, setInputFieldIsTouched] = useState(false);\n\n  const EnterdNameisValid = enteredName.trim() !== \"\";\n  const InputIsInvalid = !EnterdNameisValid && inputFieldIsTouched;\n\n  let formIsValid = false;\n  if (EnterdNameisValid) {\n    formIsValid = true;\n  }\n\n  const inputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const inputBlurHandler = () => {\n    setInputFieldIsTouched(true);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    setInputFieldIsTouched(true);\n\n    if (!EnterdNameisValid) {\n      return;\n    }\n    console.log(enteredName);\n    setEnteredName(\"\");\n    setInputFieldIsTouched(false);\n  };\n\n  const inputClass = InputIsInvalid ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={inputClass}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={inputChangeHandler}\n          value={enteredName}\n          onBlur={inputBlurHandler}\n        />\n      </div>\n      {InputIsInvalid && <p className=\"error-text\">EnteredName is not Valid</p>}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}