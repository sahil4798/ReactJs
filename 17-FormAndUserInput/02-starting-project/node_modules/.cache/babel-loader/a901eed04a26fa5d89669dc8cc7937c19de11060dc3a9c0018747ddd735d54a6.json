{"ast":null,"code":"var _jsxFileName = \"/Users/sahilverma/React/17-FormAndUserInput/02-starting-project/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: enteredNameIsInValid,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetName\n  } = useState(value => value.trim().includes(\".com\"));\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: enteredEmailIsInValid,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset\n  } = useInput(value => value.trim().includes(\".com\"));\n  console.log(enteredEmailIsInValid);\n  console.log(enteredEmailIsValid);\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const submitHandler = event => {\n    event.preventDefault();\n\n    // setInputFieldIsTouched(true);\n    // setEmailFieldIsTouched(true);\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    resetName();\n    reset();\n  };\n  const nameinputClass = enteredNameIsInValid ? \"form-control invalid\" : \"form-control\";\n  const emailinputClass = enteredEmailIsInValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameinputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        value: enteredName,\n        onBlur: nameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), enteredNameIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"EnteredName is not Valid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailinputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        value: enteredEmail,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), enteredEmailIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Enter a Valid Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"9QVOCZNXr9aQ2cGXJS2cvdVeBXI=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","isValid","enteredNameIsValid","hasError","enteredNameIsInValid","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","resetName","trim","includes","enteredEmail","enteredEmailIsValid","enteredEmailIsInValid","emailChangeHandler","emailBlurHandler","console","log","formIsValid","submitHandler","event","preventDefault","nameinputClass","emailinputClass","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/sahilverma/React/17-FormAndUserInput/02-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: enteredNameIsInValid,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetName,\n  } = useState((value) => value.trim().includes(\".com\"));\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: enteredEmailIsInValid,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset,\n  } = useInput((value) => value.trim().includes(\".com\"));\n\n  console.log(enteredEmailIsInValid);\n  console.log(enteredEmailIsValid);\n\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    // setInputFieldIsTouched(true);\n    // setEmailFieldIsTouched(true);\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    resetName();\n    reset();\n  };\n\n  const nameinputClass = enteredNameIsInValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailinputClass = enteredEmailIsInValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={nameinputClass}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          value={enteredName}\n          onBlur={nameBlurHandler}\n        />\n      </div>\n      {enteredNameIsInValid && (\n        <p className=\"error-text\">EnteredName is not Valid</p>\n      )}\n\n      <div className={emailinputClass}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          value={enteredEmail}\n          onBlur={emailBlurHandler}\n        />\n      </div>\n      {enteredEmailIsInValid && (\n        <p className={\"error-text\"}>Enter a Valid Email</p>\n      )}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,QAAQ,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM;IACJC,KAAK,EAAEC,WAAW;IAClBC,OAAO,EAAEC,kBAAkB;IAC3BC,QAAQ,EAAEC,oBAAoB;IAC9BC,kBAAkB,EAAEC,iBAAiB;IACrCC,gBAAgB,EAAEC,eAAe;IACjCC,KAAK,EAAEC;EACT,CAAC,GAAGlB,QAAQ,CAAEO,KAAK,IAAKA,KAAK,CAACY,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,MAAM,CAAC,CAAC;EAEtD,MAAM;IACJb,KAAK,EAAEc,YAAY;IACnBZ,OAAO,EAAEa,mBAAmB;IAC5BX,QAAQ,EAAEY,qBAAqB;IAC/BV,kBAAkB,EAAEW,kBAAkB;IACtCT,gBAAgB,EAAEU,gBAAgB;IAClCR;EACF,CAAC,GAAGhB,QAAQ,CAAEM,KAAK,IAAKA,KAAK,CAACY,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,MAAM,CAAC,CAAC;EAEtDM,OAAO,CAACC,GAAG,CAACJ,qBAAqB,CAAC;EAClCG,OAAO,CAACC,GAAG,CAACL,mBAAmB,CAAC;EAEhC,IAAIM,WAAW,GAAG,KAAK;EACvB,IAAIlB,kBAAkB,IAAIY,mBAAmB,EAAE;IAC7CM,WAAW,GAAG,IAAI;EACpB;EAEA,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;IACA;;IAEA,IAAI,CAACrB,kBAAkB,IAAI,CAACY,mBAAmB,EAAE;MAC/C;IACF;IAEAJ,SAAS,CAAC,CAAC;IACXD,KAAK,CAAC,CAAC;EACT,CAAC;EAED,MAAMe,cAAc,GAAGpB,oBAAoB,GACvC,sBAAsB,GACtB,cAAc;EAClB,MAAMqB,eAAe,GAAGV,qBAAqB,GACzC,sBAAsB,GACtB,cAAc;EAElB,oBACEpB,OAAA;IAAM+B,QAAQ,EAAEL,aAAc;IAAAM,QAAA,gBAC5BhC,OAAA;MAAKiC,SAAS,EAAEJ,cAAe;MAAAG,QAAA,gBAC7BhC,OAAA;QAAOkC,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvCtC,OAAA;QACEuC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,QAAQ,EAAE9B,iBAAkB;QAC5BP,KAAK,EAAEC,WAAY;QACnBqC,MAAM,EAAE7B;MAAgB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACL7B,oBAAoB,iBACnBT,OAAA;MAAGiC,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAwB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACtD,eAEDtC,OAAA;MAAKiC,SAAS,EAAEH,eAAgB;MAAAE,QAAA,gBAC9BhC,OAAA;QAAOkC,OAAO,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzCtC,OAAA;QACEuC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,OAAO;QACVC,QAAQ,EAAEpB,kBAAmB;QAC7BjB,KAAK,EAAEc,YAAa;QACpBwB,MAAM,EAAEpB;MAAiB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLlB,qBAAqB,iBACpBpB,OAAA;MAAGiC,SAAS,EAAE,YAAa;MAAAD,QAAA,EAAC;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnD,eACDtC,OAAA;MAAKiC,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BhC,OAAA;QAAQ2C,QAAQ,EAAE,CAAClB,WAAY;QAAAO,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACnC,EAAA,CAlFIF,WAAW;EAAA,QAiBXH,QAAQ;AAAA;AAAA8C,EAAA,GAjBR3C,WAAW;AAoFjB,eAAeA,WAAW;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}