{"ast":null,"code":"var _jsxFileName = \"/Users/sahilverma/React/17-FormAndUserInput/02-starting-project/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [inputFieldIsTouched, setInputFieldIsTouched] = useState(false);\n  const EnterdNameisValid = enteredName.trim() !== \"\";\n  const InputIsInvalid = !EnterdNameisValid && inputFieldIsTouched;\n\n  // const [formIsValid, setFormIsValid] = useState(false);\n  // useEffect(() => {\n  //   if (EnterdNameisValid) {\n  //     setFormIsValid(true);\n  //   } else {\n  //     setFormIsValid(false);\n  //   }\n  // }, [EnterdNameisValid]);\n\n  let formIsValid = false;\n  if (EnterdNameisValid) {\n    formIsValid = true;\n  }\n  const inputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const inputBlurHandler = () => {\n    setInputFieldIsTouched(true);\n  };\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailIsValid, setEnteredEmailIsValid] = useState(false);\n  const [emailFieldIsTouched, setEmailFieldIsTouched] = useState(false);\n  const enteredEmailIsInValid = !enteredEmailIsValid && emailFieldIsTouched;\n  const emialChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    setInputFieldIsTouched(true);\n    setEmailFieldIsTouched(true);\n    if (!EnterdNameisValid) {\n      return;\n    }\n    if (!enteredEmail.trim().includes(\".com\")) {\n      setEnteredEmailIsValid(false);\n      return;\n    }\n    setEnteredEmailIsValid(true);\n    console.log(enteredName);\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setInputFieldIsTouched(false);\n  };\n  const nameinputClass = InputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  const emailinputClass = enteredEmailIsInValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameinputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputChangeHandler,\n        value: enteredName,\n        onBlur: inputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), InputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"EnteredName is not Valid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailinputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emialChangeHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), enteredEmailIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Enter a Valid Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"OQf+adis/puRuWyn7/YxAJQDJzo=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","inputFieldIsTouched","setInputFieldIsTouched","EnterdNameisValid","trim","InputIsInvalid","formIsValid","inputChangeHandler","event","target","value","inputBlurHandler","enteredEmail","setEnteredEmail","enteredEmailIsValid","setEnteredEmailIsValid","emailFieldIsTouched","setEmailFieldIsTouched","enteredEmailIsInValid","emialChangeHandler","submitHandler","preventDefault","includes","console","log","nameinputClass","emailinputClass","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/sahilverma/React/17-FormAndUserInput/02-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [inputFieldIsTouched, setInputFieldIsTouched] = useState(false);\n\n  const EnterdNameisValid = enteredName.trim() !== \"\";\n  const InputIsInvalid = !EnterdNameisValid && inputFieldIsTouched;\n\n  // const [formIsValid, setFormIsValid] = useState(false);\n  // useEffect(() => {\n  //   if (EnterdNameisValid) {\n  //     setFormIsValid(true);\n  //   } else {\n  //     setFormIsValid(false);\n  //   }\n  // }, [EnterdNameisValid]);\n\n  let formIsValid = false;\n  if (EnterdNameisValid) {\n    formIsValid = true;\n  }\n\n  const inputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const inputBlurHandler = () => {\n    setInputFieldIsTouched(true);\n  };\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailIsValid, setEnteredEmailIsValid] = useState(false);\n  const [emailFieldIsTouched, setEmailFieldIsTouched] = useState(false);\n  const enteredEmailIsInValid = !enteredEmailIsValid && emailFieldIsTouched;\n  const emialChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    setInputFieldIsTouched(true);\n    setEmailFieldIsTouched(true);\n    if (!EnterdNameisValid) {\n      return;\n    }\n    if (!enteredEmail.trim().includes(\".com\")) {\n      setEnteredEmailIsValid(false);\n      return;\n    }\n    setEnteredEmailIsValid(true);\n    console.log(enteredName);\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setInputFieldIsTouched(false);\n  };\n\n  const nameinputClass = InputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailinputClass = enteredEmailIsInValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={nameinputClass}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={inputChangeHandler}\n          value={enteredName}\n          onBlur={inputBlurHandler}\n        />\n      </div>\n      {InputIsInvalid && <p className=\"error-text\">EnteredName is not Valid</p>}\n\n      <div className={emailinputClass}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          onChange={emialChangeHandler}\n          value={enteredEmail}\n        />\n      </div>\n      {enteredEmailIsInValid && (\n        <p className={\"error-text\"}>Enter a Valid Email</p>\n      )}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}