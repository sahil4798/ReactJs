{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// const uiInitialState = {\n//   title: \"Test Item\",\n//   price: 6,\n//   description: \"This is a first product - amazing!\",\n//   quantity: 0,\n//   total: 0,\n// };\n\nconst uiSlice = createSlice({\n  name: \"ui\",\n  initialState: {\n    items: [],\n    totalQuntity: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      // state.quantity = state.quantity + 1;\n      // state.total = state.total + 6;\n\n      state.totalQuntity++;\n      const newItem = action.payload;\n      console.log(newItem.id);\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      console.log(existingItem);\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          description: newItem.description,\n          totalPrice: newItem.price,\n          quantity: 1,\n          title: newItem.title\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + 1;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeFromCart(state, action) {\n      // state.quantity = state.quantity - 1;\n      // state.total = state.total - 6;\n\n      state.totalQuntity--;\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem) {\n        if (existingItem.quantity === 1) {\n          // state.items.pop(existingItem);\n          state.items = state.items.filter(item => item.id !== id);\n        } else {\n          existingItem.quantity--;\n          existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n        }\n      }\n    }\n  }\n});\nexport const cartActions = uiSlice.actions;\nexport default uiSlice.reducer;","map":{"version":3,"names":["createSlice","uiSlice","name","initialState","items","totalQuntity","reducers","addToCart","state","action","newItem","payload","console","log","id","existingItem","find","item","push","itemId","price","description","totalPrice","quantity","title","removeFromCart","filter","cartActions","actions","reducer"],"sources":["/Users/sahilverma/React/20-AdvanceRedux/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n// const uiInitialState = {\n//   title: \"Test Item\",\n//   price: 6,\n//   description: \"This is a first product - amazing!\",\n//   quantity: 0,\n//   total: 0,\n// };\n\nconst uiSlice = createSlice({\n  name: \"ui\",\n  initialState: {\n    items: [],\n    totalQuntity: 0,\n  },\n\n  reducers: {\n    addToCart(state, action) {\n      // state.quantity = state.quantity + 1;\n      // state.total = state.total + 6;\n\n      state.totalQuntity++;\n\n      const newItem = action.payload;\n      console.log(newItem.id);\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      console.log(existingItem);\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          description: newItem.description,\n          totalPrice: newItem.price,\n          quantity: 1,\n          title: newItem.title,\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + 1;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeFromCart(state, action) {\n      // state.quantity = state.quantity - 1;\n      // state.total = state.total - 6;\n\n      state.totalQuntity--;\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      if (existingItem) {\n        if (existingItem.quantity === 1) {\n          // state.items.pop(existingItem);\n          state.items = state.items.filter((item) => item.id !== id);\n        } else {\n          existingItem.quantity--;\n          existingItem.totalPrice =\n            existingItem.totalPrice - existingItem.price;\n        }\n      }\n    },\n  },\n});\n\nexport const cartActions = uiSlice.actions;\n\nexport default uiSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,IAAI;EACVC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,YAAY,EAAE;EAChB,CAAC;EAEDC,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvB;MACA;;MAEAD,KAAK,CAACH,YAAY,EAAE;MAEpB,MAAMK,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9BC,OAAO,CAACC,GAAG,CAACH,OAAO,CAACI,EAAE,CAAC;MACvB,MAAMC,YAAY,GAAGP,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACvEF,OAAO,CAACC,GAAG,CAACE,YAAY,CAAC;MACzB,IAAI,CAACA,YAAY,EAAE;QACjBP,KAAK,CAACJ,KAAK,CAACc,IAAI,CAAC;UACfC,MAAM,EAAET,OAAO,CAACI,EAAE;UAClBM,KAAK,EAAEV,OAAO,CAACU,KAAK;UACpBC,WAAW,EAAEX,OAAO,CAACW,WAAW;UAChCC,UAAU,EAAEZ,OAAO,CAACU,KAAK;UACzBG,QAAQ,EAAE,CAAC;UACXC,KAAK,EAAEd,OAAO,CAACc;QACjB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLT,YAAY,CAACQ,QAAQ,GAAGR,YAAY,CAACQ,QAAQ,GAAG,CAAC;QACjDR,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGZ,OAAO,CAACU,KAAK;MACnE;IACF,CAAC;IAEDK,cAAcA,CAACjB,KAAK,EAAEC,MAAM,EAAE;MAC5B;MACA;;MAEAD,KAAK,CAACH,YAAY,EAAE;MACpB,MAAMS,EAAE,GAAGL,MAAM,CAACE,OAAO;MACzB,MAAMI,YAAY,GAAGP,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;MAC/D,IAAIC,YAAY,EAAE;QAChB,IAAIA,YAAY,CAACQ,QAAQ,KAAK,CAAC,EAAE;UAC/B;UACAf,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACsB,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;QAC5D,CAAC,MAAM;UACLC,YAAY,CAACQ,QAAQ,EAAE;UACvBR,YAAY,CAACO,UAAU,GACrBP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;QAChD;MACF;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMO,WAAW,GAAG1B,OAAO,CAAC2B,OAAO;AAE1C,eAAe3B,OAAO,CAAC4B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}