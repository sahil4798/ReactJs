{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useCounter = (forward = true) => {\n  _s();\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (forward) {\n        setCounter(prevCounter => prevCounter + 1);\n      } else {\n        setCounter(prevCounter => prevCounter - 1);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [forward]);\n  return counter;\n};\n_s(useCounter, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\nexport default useCounter;","map":{"version":3,"names":["useState","useEffect","useCounter","forward","_s","counter","setCounter","interval","setInterval","prevCounter","clearInterval"],"sources":["/Users/sahilverma/React/16-Customhooks/01-starting-project/src/hooks/use-counter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useCounter = (forward = true) => {\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (forward) {\n        setCounter((prevCounter) => prevCounter + 1);\n      } else {\n        setCounter((prevCounter) => prevCounter - 1);\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [forward]);\n\n  return counter;\n};\n\nexport default useCounter;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,UAAU,GAAGA,CAACC,OAAO,GAAG,IAAI,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd,MAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIL,OAAO,EAAE;QACXG,UAAU,CAAEG,WAAW,IAAKA,WAAW,GAAG,CAAC,CAAC;MAC9C,CAAC,MAAM;QACLH,UAAU,CAAEG,WAAW,IAAKA,WAAW,GAAG,CAAC,CAAC;MAC9C;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,OAAOE,OAAO;AAChB,CAAC;AAACD,EAAA,CAhBIF,UAAU;AAkBhB,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}