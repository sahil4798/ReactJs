{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nconst UseHttp = passData => {\n  _s();\n  console.log(\"Component is Runnning\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async requestConfig => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n        headers: requestConfig.headers ? requestConfig.headers : {}\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      passData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, [passData]);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n_s(UseHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\n_c = UseHttp;\nexport default UseHttp;\nvar _c;\n$RefreshReg$(_c, \"UseHttp\");","map":{"version":3,"names":["useState","useCallback","UseHttp","passData","_s","console","log","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","response","fetch","url","method","body","JSON","stringify","headers","ok","Error","data","json","err","message","_c","$RefreshReg$"],"sources":["/Users/sahilverma/React/16-Customhooks/04-onwards-to-a-more-realistic-example/src/hooks/use-http.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nconst UseHttp = (passData) => {\n  console.log(\"Component is Runnning\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(\n    async (requestConfig) => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(requestConfig.url, {\n          method: requestConfig.method ? requestConfig.method : \"GET\",\n          body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n          headers: requestConfig.headers ? requestConfig.headers : {},\n        });\n\n        if (!response.ok) {\n          throw new Error(\"Request failed!\");\n        }\n\n        const data = await response.json();\n\n        passData(data);\n      } catch (err) {\n        setError(err.message || \"Something went wrong!\");\n      }\n      setIsLoading(false);\n    },\n    [passData]\n  );\n\n  return { isLoading, error, sendRequest };\n};\n\nexport default UseHttp;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAIC,QAAQ,IAAK;EAAAC,EAAA;EAC5BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,WAAW,GAAGV,WAAW,CAC7B,MAAOW,aAAa,IAAK;IACvBJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,aAAa,CAACG,GAAG,EAAE;QAC9CC,MAAM,EAAEJ,aAAa,CAACI,MAAM,GAAGJ,aAAa,CAACI,MAAM,GAAG,KAAK;QAC3DC,IAAI,EAAEL,aAAa,CAACK,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACP,aAAa,CAACK,IAAI,CAAC,GAAG,IAAI;QACpEG,OAAO,EAAER,aAAa,CAACQ,OAAO,GAAGR,aAAa,CAACQ,OAAO,GAAG,CAAC;MAC5D,CAAC,CAAC;MAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElCrB,QAAQ,CAACoB,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZf,QAAQ,CAACe,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAlB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EACD,CAACL,QAAQ,CACX,CAAC;EAED,OAAO;IAAEI,SAAS;IAAEE,KAAK;IAAEE;EAAY,CAAC;AAC1C,CAAC;AAACP,EAAA,CAhCIF,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}