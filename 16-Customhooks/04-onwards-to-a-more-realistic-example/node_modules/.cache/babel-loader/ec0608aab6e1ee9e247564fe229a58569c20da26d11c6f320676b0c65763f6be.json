{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst UseFetch = onAddTask => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const enterTaskHandler = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-5f152-default-rtdb.firebaseio.com/tasks.json\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  return {\n    isLoading: isLoading,\n    error: error,\n    enterTaskHandler: enterTaskHandler\n  };\n};\n_s(UseFetch, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n_c = UseFetch;\nexport default UseFetch;\nvar _c;\n$RefreshReg$(_c, \"UseFetch\");","map":{"version":3,"names":["useState","UseFetch","onAddTask","_s","isLoading","setIsLoading","error","setError","enterTaskHandler","taskText","response","fetch","method","body","JSON","stringify","text","headers","ok","Error","data","json","generatedId","name","createdTask","id","props","err","message","_c","$RefreshReg$"],"sources":["/Users/sahilverma/React/16-Customhooks/04-onwards-to-a-more-realistic-example/src/hooks/use-fetch.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst UseFetch = (onAddTask) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-http-5f152-default-rtdb.firebaseio.com/tasks.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  return {\n    isLoading: isLoading,\n    error: error,\n    enterTaskHandler: enterTaskHandler,\n  };\n};\n\nexport default UseFetch;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,QAAQ,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3CJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAAiE,EACjE;QACEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEP;QAAS,CAAC,CAAC;QACxCQ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAED,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElC,MAAMC,WAAW,GAAGF,IAAI,CAACG,IAAI,CAAC,CAAC;MAC/B,MAAMC,WAAW,GAAG;QAAEC,EAAE,EAAEH,WAAW;QAAEN,IAAI,EAAEP;MAAS,CAAC;MAEvDiB,KAAK,CAACxB,SAAS,CAACsB,WAAW,CAAC;IAC9B,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZpB,QAAQ,CAACoB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAvB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EACD,OAAO;IACLD,SAAS,EAAEA,SAAS;IACpBE,KAAK,EAAEA,KAAK;IACZE,gBAAgB,EAAEA;EACpB,CAAC;AACH,CAAC;AAACL,EAAA,CAvCIF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}