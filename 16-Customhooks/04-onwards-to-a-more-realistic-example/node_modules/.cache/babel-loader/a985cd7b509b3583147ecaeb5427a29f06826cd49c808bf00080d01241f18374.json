{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst UseHttp = (requestConfig, passData) => {\n  _s();\n  console.log(\"Component is Runnning\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n        headers: requestConfig.headers ? requestConfig.headers : {}\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      passData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n_s(UseHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n_c = UseHttp;\nexport default UseHttp;\nvar _c;\n$RefreshReg$(_c, \"UseHttp\");","map":{"version":3,"names":["useState","UseHttp","requestConfig","passData","_s","console","log","isLoading","setIsLoading","error","setError","sendRequest","taskText","response","fetch","url","method","body","JSON","stringify","headers","ok","Error","data","json","err","message","_c","$RefreshReg$"],"sources":["/Users/sahilverma/React/16-Customhooks/04-onwards-to-a-more-realistic-example/src/hooks/use-http.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst UseHttp = (requestConfig, passData) => {\n  console.log(\"Component is Runnning\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n        headers: requestConfig.headers ? requestConfig.headers : {},\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n\n      passData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  return { isLoading, error, sendRequest };\n};\n\nexport default UseHttp;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,OAAO,GAAGA,CAACC,aAAa,EAAEC,QAAQ,KAAK;EAAAC,EAAA;EAC3CC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACtCJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACZ,aAAa,CAACa,GAAG,EAAE;QAC9CC,MAAM,EAAEd,aAAa,CAACc,MAAM,GAAGd,aAAa,CAACc,MAAM,GAAG,KAAK;QAC3DC,IAAI,EAAEf,aAAa,CAACe,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACjB,aAAa,CAACe,IAAI,CAAC,GAAG,IAAI;QACpEG,OAAO,EAAElB,aAAa,CAACkB,OAAO,GAAGlB,aAAa,CAACkB,OAAO,GAAG,CAAC;MAC5D,CAAC,CAAC;MAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElCrB,QAAQ,CAACoB,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZf,QAAQ,CAACe,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAlB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OAAO;IAAED,SAAS;IAAEE,KAAK;IAAEE;EAAY,CAAC;AAC1C,CAAC;AAACP,EAAA,CA7BIH,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AA+Bb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}