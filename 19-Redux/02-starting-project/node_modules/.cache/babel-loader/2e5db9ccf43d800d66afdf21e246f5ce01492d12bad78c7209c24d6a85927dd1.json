{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: false,\n  isLoggedIn: false\n};\nconst initialAuthState = {\n  isAuthenticated: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    login(state) {\n      state.isLoggedIn = true;\n    },\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleHandler(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\n\n// const store = configureStore({ reducer: counterSlice.reducer });\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","isLoggedIn","initialAuthState","isAuthenticated","counterSlice","name","initialState","reducers","login","state","increment","decrement","increase","action","payload","toggleHandler","authSlice","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["/Users/sahilverma/React/19-Redux/02-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: false,\n  isLoggedIn: false,\n};\n\nconst initialAuthState = { isAuthenticated: true };\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    login(state) {\n      state.isLoggedIn = true;\n    },\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleHandler(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    },\n  },\n});\n\n// const store = configureStore({ reducer: counterSlice.reducer });\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer,\n  },\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAC9D,MAAMC,mBAAmB,GAAG;EAC1BC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,gBAAgB,GAAG;EAAEC,eAAe,EAAE;AAAK,CAAC;AAElD,MAAMC,YAAY,GAAGR,WAAW,CAAC;EAC/BS,IAAI,EAAE,SAAS;EACfC,YAAY,EAAER,mBAAmB;EACjCS,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAE;MACXA,KAAK,CAACR,UAAU,GAAG,IAAI;IACzB,CAAC;IACDS,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACV,OAAO,EAAE;IACjB,CAAC;IACDY,SAASA,CAACF,KAAK,EAAE;MACfA,KAAK,CAACV,OAAO,EAAE;IACjB,CAAC;IACDa,QAAQA,CAACH,KAAK,EAAEI,MAAM,EAAE;MACtBJ,KAAK,CAACV,OAAO,GAAGU,KAAK,CAACV,OAAO,GAAGc,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACN,KAAK,EAAE;MACnBA,KAAK,CAACT,WAAW,GAAG,CAACS,KAAK,CAACT,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMgB,SAAS,GAAGpB,WAAW,CAAC;EAC5BS,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAE;MACXA,KAAK,CAACN,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDc,MAAMA,CAACR,KAAK,EAAE;MACZA,KAAK,CAACN,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;;AAEF;;AAEA,MAAMe,KAAK,GAAGrB,cAAc,CAAC;EAC3BsB,OAAO,EAAE;IACPpB,OAAO,EAAEK,YAAY,CAACe,OAAO;IAC7BC,IAAI,EAAEJ,SAAS,CAACG;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGjB,YAAY,CAACkB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGP,SAAS,CAACM,OAAO;AAC5C,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}