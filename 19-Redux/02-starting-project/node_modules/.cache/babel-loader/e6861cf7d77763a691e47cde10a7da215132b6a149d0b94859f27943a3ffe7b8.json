{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: false,\n  isLoggedIn: false\n};\nconst initialAuthState = {\n  isLoggedIn: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    login(state) {\n      state.isLoggedIn = true;\n    },\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleHandler(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isLoggedIn = true;\n    }\n  }\n});\n\n// const store = configureStore({ reducer: counterSlice.reducer });\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","isLoggedIn","initialAuthState","counterSlice","name","initialState","reducers","login","state","increment","decrement","increase","action","payload","toggleHandler","authSlice","store","reducer","counterActions","actions"],"sources":["/Users/sahilverma/React/19-Redux/02-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: false,\n  isLoggedIn: false,\n};\n\nconst initialAuthState = { isLoggedIn: true };\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    login(state) {\n      state.isLoggedIn = true;\n    },\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleHandler(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isLoggedIn = true;\n    },\n  },\n});\n\n// const store = configureStore({ reducer: counterSlice.reducer });\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n  },\n});\n\nexport const counterActions = counterSlice.actions;\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAC9D,MAAMC,mBAAmB,GAAG;EAC1BC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,gBAAgB,GAAG;EAAED,UAAU,EAAE;AAAK,CAAC;AAE7C,MAAME,YAAY,GAAGP,WAAW,CAAC;EAC/BQ,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEP,mBAAmB;EACjCQ,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAE;MACXA,KAAK,CAACP,UAAU,GAAG,IAAI;IACzB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACT,OAAO,EAAE;IACjB,CAAC;IACDW,SAASA,CAACF,KAAK,EAAE;MACfA,KAAK,CAACT,OAAO,EAAE;IACjB,CAAC;IACDY,QAAQA,CAACH,KAAK,EAAEI,MAAM,EAAE;MACtBJ,KAAK,CAACT,OAAO,GAAGS,KAAK,CAACT,OAAO,GAAGa,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACN,KAAK,EAAE;MACnBA,KAAK,CAACR,WAAW,GAAG,CAACQ,KAAK,CAACR,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMe,SAAS,GAAGnB,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEH,gBAAgB;EAC9BI,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAE;MACXA,KAAK,CAACP,UAAU,GAAG,IAAI;IACzB;EACF;AACF,CAAC,CAAC;;AAEF;;AAEA,MAAMe,KAAK,GAAGnB,cAAc,CAAC;EAC3BoB,OAAO,EAAE;IACPlB,OAAO,EAAEI,YAAY,CAACc;EACxB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGf,YAAY,CAACgB,OAAO;AAClD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}