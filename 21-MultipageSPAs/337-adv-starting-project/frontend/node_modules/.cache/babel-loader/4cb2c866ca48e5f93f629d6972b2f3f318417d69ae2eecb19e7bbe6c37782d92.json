{"ast":null,"code":"var _jsxFileName = \"/Users/sahilverma/React/21-MultipageSPAs/337-adv-starting-project/frontend/src/pages/Event.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from \"react\";\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n\n  // const data = useLoaderData();\n  // const events = data.events;\n  // return (\n  //   <>\n  //     <EventsList events={events} />\n  //   </>\n  // );\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch events!\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport const loader = async () => {\n  return defer({\n    events: loadEvents()\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Suspense","useLoaderData","json","defer","Await","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","children","resolve","loadedEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/sahilverma/React/21-MultipageSPAs/337-adv-starting-project/frontend/src/pages/Event.js"],"sourcesContent":["import { Suspense } from \"react\";\n\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\n\nimport EventsList from \"../components/EventsList\";\n\nfunction EventsPage() {\n  const { events } = useLoaderData();\n\n  return (\n    <Suspense>\n      {\" \"}\n      <Await resolve={events}>{(loadedEvents) => <EventsList />}</Await>\n    </Suspense>\n  );\n\n  // const data = useLoaderData();\n  // const events = data.events;\n  // return (\n  //   <>\n  //     <EventsList events={events} />\n  //   </>\n  // );\n}\n\nexport default EventsPage;\n\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw json({ message: \"Could not fetch events!\" }, { status: 500 });\n  } else {\n    return response;\n  }\n}\n\nexport const loader = async () => {\n  return defer({\n    events: loadEvents(),\n  });\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AAEpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGT,aAAa,CAAC,CAAC;EAElC,oBACEM,OAAA,CAACP,QAAQ;IAAAW,QAAA,GACN,GAAG,eACJJ,OAAA,CAACH,KAAK;MAACQ,OAAO,EAAEF,MAAO;MAAAC,QAAA,EAAGE,YAAY,iBAAKN,OAAA,CAACF,UAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;;EAGb;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACR,EAAA,CAjBQD,UAAU;EAAA,QACEP,aAAa;AAAA;AAAAiB,EAAA,GADzBV,UAAU;AAmBnB,eAAeA,UAAU;AAEzB,eAAeW,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMpB,IAAI,CAAC;MAAEqB,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,MAAMK,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,OAAOtB,KAAK,CAAC;IACXO,MAAM,EAAES,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ,CAAC;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}