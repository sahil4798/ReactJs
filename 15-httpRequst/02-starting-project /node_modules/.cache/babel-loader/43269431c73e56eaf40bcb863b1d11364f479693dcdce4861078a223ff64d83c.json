{"ast":null,"code":"var _jsxFileName = \"/Users/sahilverma/React/15-httpRequst/02-starting-project /src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [moives, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // const fetchMoiviesHandler = () => {\n  //   fetch(\"https://swapi.dev/api/films\")\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       // console.log(data);\n  //       const transformedMoivies = data.results.map((moive) => {\n  //         return {\n  //           id: moive.episode_id,\n  //           title: moive.title,\n  //           openingText: moive.opening_crawl,\n  //           releaseDate: moive.release_date,\n  //         };\n  //       });\n  //       setMovies(transformedMoivies);\n  //     });\n  // };\n  async function fetchMoiviesHandler() {\n    setIsLoading(true);\n    const response = await fetch(\"https://swapi.dev/api/films\");\n    const data = await response.json();\n    const transformedMoivies = data.results.map(moive => {\n      return {\n        id: moive.episode_id,\n        title: moive.title,\n        openingText: moive.opening_crawl,\n        releaseDate: moive.release_date\n      };\n    });\n    setMovies(transformedMoivies);\n    setIsLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoiviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && moives.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: moives\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 45\n      }, this), !isLoading && moives.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 47\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"x0RpubwPW5YGdYHCfSgWyBbWg4Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","moives","setMovies","isLoading","setIsLoading","fetchMoiviesHandler","response","fetch","data","json","transformedMoivies","results","map","moive","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","movies","_c","$RefreshReg$"],"sources":["/Users/sahilverma/React/15-httpRequst/02-starting-project /src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [moives, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // const fetchMoiviesHandler = () => {\n  //   fetch(\"https://swapi.dev/api/films\")\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       // console.log(data);\n  //       const transformedMoivies = data.results.map((moive) => {\n  //         return {\n  //           id: moive.episode_id,\n  //           title: moive.title,\n  //           openingText: moive.opening_crawl,\n  //           releaseDate: moive.release_date,\n  //         };\n  //       });\n  //       setMovies(transformedMoivies);\n  //     });\n  // };\n  async function fetchMoiviesHandler() {\n    setIsLoading(true);\n    const response = await fetch(\"https://swapi.dev/api/films\");\n    const data = await response.json();\n\n    const transformedMoivies = data.results.map((moive) => {\n      return {\n        id: moive.episode_id,\n        title: moive.title,\n        openingText: moive.opening_crawl,\n        releaseDate: moive.release_date,\n      };\n    });\n    setMovies(transformedMoivies);\n    setIsLoading(false);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoiviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && moives.length > 0 && <MoviesList movies={moives} />}\n        {!isLoading && moives.length === 0 && <p>No Movies</p>}\n        {isLoading && <p>Loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,eAAeU,mBAAmBA,CAAA,EAAG;IACnCD,YAAY,CAAC,IAAI,CAAC;IAClB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;IAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElC,MAAMC,kBAAkB,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,KAAK,IAAK;MACrD,OAAO;QACLC,EAAE,EAAED,KAAK,CAACE,UAAU;QACpBC,KAAK,EAAEH,KAAK,CAACG,KAAK;QAClBC,WAAW,EAAEJ,KAAK,CAACK,aAAa;QAChCC,WAAW,EAAEN,KAAK,CAACO;MACrB,CAAC;IACH,CAAC,CAAC;IACFlB,SAAS,CAACQ,kBAAkB,CAAC;IAC7BN,YAAY,CAAC,KAAK,CAAC;EACrB;EAEA,oBACEN,OAAA,CAACJ,KAAK,CAAC2B,QAAQ;IAAAC,QAAA,gBACbxB,OAAA;MAAAwB,QAAA,eACExB,OAAA;QAAQyB,OAAO,EAAElB,mBAAoB;QAAAiB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACV7B,OAAA;MAAAwB,QAAA,GACG,CAACnB,SAAS,IAAIF,MAAM,CAAC2B,MAAM,GAAG,CAAC,iBAAI9B,OAAA,CAACF,UAAU;QAACiC,MAAM,EAAE5B;MAAO;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACjE,CAACxB,SAAS,IAAIF,MAAM,CAAC2B,MAAM,KAAK,CAAC,iBAAI9B,OAAA;QAAAwB,QAAA,EAAG;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACrDxB,SAAS,iBAAIL,OAAA;QAAAwB,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAAC3B,EAAA,CAnDQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}